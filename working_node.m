function [status, timer,flag] = working_node(pre_status_matrix, pre_next_status_timer,frame_size,first_frame_flag)
    %%pre_status_matrix : Ma tráº­n chá»©a tráº¡ng thÃ¡i trÆ°á»›c Ä‘Ã³ cá»§a má»—i node
    %%pre_next_status_timer : Ma tráº­n chá»©a bá»™ Ä‘áº¿m thá»?i gian cho tráº¡ng thÃ¡i tiáº¿p theo cá»§a má»—i node.
    %%frame_size : Ma tráº­n chá»©a kÃ­ch thÆ°á»›c cá»§a cÃ¡c khung cho má»—i node.
    %%first_frame_flag : Flag cho biáº¿t Ä‘Ã¢y cÃ³ pháº£i lÃ  khung Ä‘áº§u tiÃªn hay k

    len=size(pre_status_matrix,1); %%sá»‘ node
    status=zeros(len,1);
    timer=zeros(len,1);
    flag=first_frame_flag;
    
    for i=1:len
        if(pre_status_matrix(i)==4 && pre_next_status_timer(i)==1) %SIFS end, sending ACK;
            status(i)=5;
            timer(i)=3;
            
        end
        
        
        if(pre_status_matrix(i)==3 && pre_next_status_timer(i)>1) %reiceiving data;
            status(i)=3;
            timer(i)= pre_next_status_timer(i)-1;
            
        end
        
        
        if(pre_status_matrix(i)==5 && pre_next_status_timer(i)>1) %sending ACK;
            status(i)=5;
            timer(i)= pre_next_status_timer(i)-1;
            
        end
        
        if(pre_status_matrix(i)==2 && pre_next_status_timer(i)==1) %DIFS end start sending data;
            status(i)=3;
            timer(i) = frame_size(i);
            flag(i)=1;
        end
        
    end
    
    

end